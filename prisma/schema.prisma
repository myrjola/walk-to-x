datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Team {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique @db.VarChar(255)

  authenticators Authenticator[]
  members        UserProfile[]
  challenge      Challenge      @relation(fields: [challengeId], references: [id])
  challengeId    Int
}

model Challenge {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String   @unique @db.VarChar(255)
  meters       Float    @db.Double

  teams Team[]
}

model Distance {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  meters    Float    @db.Double

  userProfile   UserProfile @relation(fields: [userProfileId], references: [id])
  userProfileId Int
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(31)
  createdAt DateTime @default(now())

  webAuthnUser WebAuthnUser?
  team         Team?         @relation(fields: [teamId], references: [id])
  teamId       Int?          @unique
  distances    Distance[]
}

model WebAuthnUser {
  id         Int      @id @default(autoincrement())
  challenge  String?
  registered Boolean  @default(false)
  createdAt  DateTime @default(now())

  userProfile    UserProfile     @relation(fields: [userProfileId], references: [id])
  userProfileId  Int             @unique
  authenticators Authenticator[]
}

model Authenticator {
  id                   Int      @id @default(autoincrement())
  credentialID         String   @unique
  credentialPublicKey  Bytes
  createdAt            DateTime @default(now())
  credentialDeviceType String   @db.VarChar(31)
  credentialBackedUp   Boolean
  transports           String?  @db.VarChar(255)
  counter              Int

  webAuthnUser   WebAuthnUser @relation(fields: [webAuthnUserId], references: [id])
  webAuthnUserId Int
  Team           Team?        @relation(fields: [teamId], references: [id])
  teamId         Int?
}
